package com.exmaple.jarvis.chat;import android.content.Context;import android.graphics.Bitmap;import android.graphics.Matrix;import android.graphics.drawable.BitmapDrawable;import android.net.Uri;import android.os.Environment;import android.util.Log;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import java.text.SimpleDateFormat;import java.util.Date;import java.util.HashMap;import java.util.Map;import okhttp3.MediaType;import okhttp3.RequestBody;public class Constant {    public static String baseUrl = "http://jarvisdomain.ddns.net/api/";    public static Map<String, RequestBody> generateRequestBody(Map<String, String> requestDataMap) {        Map<String, RequestBody> requestBodyMap = new HashMap<>();        for (String key : requestDataMap.keySet()) {            RequestBody requestBody = RequestBody.create(MediaType.parse("multipart/form-data"),                    requestDataMap.get(key) == null ? "" : requestDataMap.get(key));            requestBodyMap.put(key, requestBody);        }        return requestBodyMap;    }//    public static void persistImage(Bitmap bitmap, Context context) {    public static File persistImage(CustomImageView imgView, Context context) {        Bitmap bitmap = ((BitmapDrawable) imgView.getDrawable()).getBitmap();        File filesDir = context.getFilesDir();        String date = String.valueOf(System.currentTimeMillis());        File imageFile = new File(filesDir, date + ".png");        OutputStream os;        try {            os = new FileOutputStream(imageFile);            bitmap.compress(Bitmap.CompressFormat.PNG, 100, os);            os.flush();            os.close();        } catch (Exception e) {            Log.e("Error writing bitmap", e.getMessage());        }        return imageFile;    }    public static File createImageFile() throws IOException {        // Create an image file name        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());        String imageFileName = "JPEG_" + timeStamp + "_";        File storageDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);        File image = File.createTempFile(                imageFileName,  /* prefix */                ".jpg",         /* suffix */                storageDir      /* directory */        );        return image;    }}