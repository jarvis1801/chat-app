package com.exmaple.jarvis.chat.Activity;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import es.dmoral.toasty.Toasty;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.os.Handler;import android.view.View;import android.widget.Toast;import com.exmaple.jarvis.chat.Model.Message;import com.exmaple.jarvis.chat.Model.User;import com.exmaple.jarvis.chat.Presenter.HomePresenter;import com.exmaple.jarvis.chat.RecyclerView.ChatMsgRecyclerViewAdapter;import java.util.List;public class HomeActivity extends AppCompatActivity implements HomeView {    private RecyclerView rv_chat_list;    private ChatMsgRecyclerViewAdapter mAdapter;    private RecyclerView.LayoutManager mLayoutManager;    private HomePresenter homePresenter;    private String username;    private Boolean doubleBackToExitPressedOnce = false;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_home);        setViewElement();        initRecyclerView();        getUsername();        setPresenter();        getChatMsgList();    }    private void initRecyclerView() {        rv_chat_list.setHasFixedSize(true);        mLayoutManager = new LinearLayoutManager(this);        rv_chat_list.setLayoutManager(mLayoutManager);    }    private void setPresenter() {        homePresenter = new HomePresenter(this);    }    private void setViewElement() {        rv_chat_list = findViewById(R.id.rv_chat_list);    }    @Override    public void onBackPressed() {        if (doubleBackToExitPressedOnce) {//            super.onBackPressed();//            moveTaskToBack(true);            finishAffinity();        }        doubleBackToExitPressedOnce = true;        Toasty.info(this, getString(R.string.close_app_hint), Toast.LENGTH_SHORT, true).show();        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                doubleBackToExitPressedOnce = false;            }        }, 1000);    }//    public void test(View view) {//        logout();//    }    private void logout() {        SharedPreferences settings = getSharedPreferences("userInfo",                Context.MODE_PRIVATE);        SharedPreferences.Editor editor = settings.edit();        editor.clear().apply();        Intent i = new Intent(this, StartActivity.class);        i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);        startActivity(i);    }    private void getChatMsgList() {        homePresenter.getChatMsgList(username);    }    private void getUsername() {        SharedPreferences prefs = getSharedPreferences("userInfo", MODE_PRIVATE);        username = prefs.getString("username", "");    }    @Override    public void setAdapter(List<Message> msgList) {        mAdapter = new ChatMsgRecyclerViewAdapter(this, msgList);        rv_chat_list.setAdapter(mAdapter);    }}